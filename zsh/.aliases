# ~/.aliases
# typos/generics
alias ..='cd ..'
alias cd..='cd ..'

# defaults
alias vi="vim"

# ls colors
if [ -z "${NO_COLOR:-}" ]; then
	[ -z "$LS_COLORS" ] && which dircolors >/dev/null && eval $(dircolors -b)
	if [ "$LS_COLORS" ] && ls --color -d . >/dev/null 2>&1; then
		alias ls='ls -F --color=auto'
	elif ls -G -d . >/dev/null 2>&1; then
		export CLICOLOR=1
		export LSCOLORS=ExFxBxDxCxegedabagacad
		alias ls='ls -FG'
	else
		alias ls='ls -F'
	fi
fi

# short aliases for commands
if [ "${NO_COLOR:-}" ]; then
	alias git='git -c color.ui=no'
	alias g='git -c color.ui=no'
else
	alias g='git'
fi


# defaults for pwqgen
if which pwqgen >/dev/null; then
	pwqgen() {
		if [ -z "$*" ]; then set -- random=64 ; fi
		command pwqgen "$@";
	}
fi


# Chrome remote work...
if which chromium >/dev/null; then
	alias chromium-temp="chromium --temp-profile"
	alias chromium-proxy="chromium --temp-profile --proxy-server='socks5://localhost:9999' --proxy-bypass-list='<-loopback>'"
fi


## Docker & Minikube stuff
#
if which minikube >/dev/null; then
	# minikube completion
	if [ "${ZSH_VERSION:-}" ]; then
		source <(minikube completion zsh)
	elif [ "${BASH_VERSION:-}" ]; then
		source <(minikube completion bash)
	fi

	# helper to connect docker to minikube
	docker-on-minikube() {
		case "${1:-}" in
			(off|disconnect)
				unset DOCKER_TLS_VERIFY DOCKER_HOST DOCKER_CERT_PATH MINIKUBE_ACTIVE_DOCKERD
				;;
			(on|connect)
				eval $(minikube -p ${2:-minikube} docker-env)
				;;
			(*)
				eval $(minikube -p ${1:-minikube} docker-env)
				;;
		esac
	}

	# zsh
	if [ "${ZSH_VERSION:-}" ] && type compdef 1>/dev/null 2>/dev/null; then
		_minikube_profiles() {
			local -a profiles
			profiles=(${(f)"$(/bin/ls "$HOME/.minikube/profiles")"})
			_describe -t profiless "profiles" profiles
		}
		_docker-on-minikube() {
			local curcontext="$curcontext" state line ret=1
			local -a commands
			commands=(
				"on:Connect docker to minikube"
				connect
				"off:Disconned docker from minikube"
				disconnect
			)
			_arguments -C \
				'(-): :->commands' \
				'(-)*:: :->arguments'
			case "$state" in
				(commands)
					_describe -t commands 'commands' commands && ret=0
					;;
				(arguments)
					curcontext="${curcontext%:*}-${words[1]}:"
					case "${words[1]}" in
						(on|connect)
							_arguments ':profiles:_minikube_profiles' && ret=0
							;;
						(*)
							;;
					esac
					;;
			esac
			return ret
		}
		compdef _docker-on-minikube docker-on-minikube
	fi
fi


[ -r "$HOME/.aliases.local" ] && . "$HOME/.aliases.local"
# vim: set ts=4 sw=4 tw=0 noet syntax=sh filetype=sh :
